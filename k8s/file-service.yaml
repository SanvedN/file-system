apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: file-storage-pvc
  namespace: file-system
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: shared-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: file-service
  namespace: file-system
  labels:
    app: file-service
spec:
  replicas: 3
  selector:
    matchLabels:
      app: file-service
  template:
    metadata:
      labels:
        app: file-service
    spec:
      initContainers:
      - name: wait-for-db
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z postgres-service 5432; do echo waiting for postgres; sleep 2; done;']
      - name: wait-for-redis
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z redis-service 6379; do echo waiting for redis; sleep 2; done;']
      containers:
      - name: file-service
        image: file-system:latest
        command: ["python", "-m", "uvicorn", "src.file_service.app:app", "--host", "0.0.0.0", "--port", "8001"]
        ports:
        - containerPort: 8001
        envFrom:
        - configMapRef:
            name: file-system-config
        env:
        - name: DATABASE_URL
          value: "postgresql+asyncpg://file_system_user:$(DB_PASSWORD)@postgres-service:5432/file_system_db"
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@redis-service:6379/0"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
        volumeMounts:
        - name: file-storage
          mountPath: /app/storage
        - name: logs
          mountPath: /app/logs
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: 8001
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: file-storage
        persistentVolumeClaim:
          claimName: file-storage-pvc
      - name: logs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: file-service
  namespace: file-system
  labels:
    app: file-service
spec:
  selector:
    app: file-service
  ports:
  - port: 8001
    targetPort: 8001
    name: http
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: file-service-hpa
  namespace: file-system
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: file-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
